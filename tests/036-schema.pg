SET search_path = public,tap;

BEGIN;
--SELECT plan( 5 );
SELECT * FROM no_plan();

SELECT tables_are( 'public', ARRAY[ 'users', 'flips', 'ignored' ] );

-- Test users.
SELECT has_table(  'users' );
SELECT has_pk(     'users' );

SELECT has_column(        'users', 'nickname' );
SELECT col_type_is(       'users', 'nickname', 'text' );
SELECT col_hasnt_default( 'users', 'nickname' );
SELECT col_is_pk(         'users', 'nickname' );

SELECT has_column(        'users', 'password' );
SELECT col_type_is(       'users', 'password', 'text' );
SELECT col_not_null(      'users', 'password' );
SELECT col_hasnt_default( 'users', 'password' );

SELECT has_column(        'users', 'timestamp' );
SELECT col_type_is(       'users', 'timestamp', 'timestamp with time zone' );
SELECT col_not_null(      'users', 'timestamp' );
SELECT col_has_default(   'users', 'timestamp' );
SELECT col_default_is(    'users', 'timestamp', 'now()' );

SELECT has_function('crypt');
SELECT has_function('gen_salt');

-- Test BODY domain.
SELECT has_domain('body');
SELECT domain_type_is('body', 'text'); 
CREATE TEMPORARY TABLE foo (body body);
SELECT lives_ok(
    $$INSERT INTO foo VALUES('whatever'); $$,
    'Should be able to insert a short body value'
);

SELECT lives_ok(
    $$ INSERT INTO foo VALUES(lpad('', 180, 'xy')); $$,
    'Should be able to insert 180 character body'
);

SELECT throws_ok(
    $$ INSERT INTO foo VALUES(lpad('', 181, 'xy')); $$,
    '23514',
    NULL,
    'Body domain should reject 181 chars'
);

-- Test flips.
SELECT has_table(  'flips' );
SELECT has_pk(     'flips' );
SELECT has_fk(     'flips' );

SELECT has_column(        'flips', 'id' );
SELECT col_type_is(       'flips', 'id', 'text' );
SELECT col_hasnt_default( 'flips', 'id' );
SELECT col_is_pk(         'flips', 'id' );

SELECT has_column(        'flips', 'nickname' );
SELECT col_type_is(       'flips', 'nickname', 'text' );
SELECT col_not_null(      'flips', 'nickname' );
SELECT col_hasnt_default( 'flips', 'nickname' );
SELECT col_is_fk(         'flips', 'nickname' );
SELECT fk_ok( 'flips', 'nickname', 'users', 'nickname'); 

SELECT has_column(      'flips', 'body' );
SELECT col_type_is(     'flips', 'body', 'body' );
SELECT col_not_null(    'flips', 'body' );
SELECT col_has_default( 'flips', 'body' );
SELECT col_default_is(  'flips', 'body', '');

SELECT has_column(      'flips', 'timestamp' );
SELECT col_type_is(     'flips', 'timestamp', 'timestamp with time zone' );
SELECT col_not_null(    'flips', 'timestamp' );
SELECT col_has_default( 'flips', 'timestamp' );
SELECT col_default_is(  'flips', 'timestamp', 'clock_timestamp()');

SELECT has_column(        'flips', 'tsv' );
SELECT col_type_is(       'flips', 'tsv', 'tsvector' );
SELECT col_not_null(      'flips', 'tsv' );
SELECT col_hasnt_default( 'flips', 'tsv' );

SELECT has_trigger('flips', 'flip_fti');
SELECT trigger_is( 'flips', 'flip_fti', 'tsvector_update_trigger');

SELECT has_index('flips', 'flip_body_fti', 'tsv'::name);
SELECT index_is_type('flips', 'flip_body_fti', 'gin');

SELECT has_index('flips', 'flip_timestamp_idx', 'timestamp'::name);
SELECT index_is_type('flips', 'flip_timestamp_idx', 'btree');

-- Test ignored.
SELECT has_table(  'ignored' );
SELECT has_pk(     'ignored' );
SELECT has_fk(     'ignored' );

SELECT has_column(        'ignored', 'user_nick' );
SELECT col_type_is(       'ignored', 'user_nick', 'text' );
SELECT col_not_null(      'ignored', 'user_nick' );
SELECT col_hasnt_default( 'ignored', 'user_nick' );
SELECT col_is_fk(         'ignored', 'user_nick' );
SELECT fk_ok( 'ignored', 'user_nick', 'users', 'nickname'); 

SELECT has_column(        'ignored', 'ignored_nick' );
SELECT col_type_is(       'ignored', 'ignored_nick', 'text' );
SELECT col_not_null(      'ignored', 'ignored_nick' );
SELECT col_hasnt_default( 'ignored', 'ignored_nick' );
SELECT col_is_fk(         'ignored', 'ignored_nick' );
SELECT fk_ok( 'ignored', 'ignored_nick', 'users', 'nickname'); 

SELECT col_is_pk('ignored', ARRAY['user_nick', 'ignored_nick']);

SELECT has_index(
    'ignored', 'ignored_user_nick_idx', 'user_nick'::name
);
SELECT index_is_type('ignored', 'ignored_user_nick_idx', 'btree');

SELECT has_index(
    'ignored', 'ignored_ignored_nick_idx', 'ignored_nick'::name
);
SELECT index_is_type('ignored', 'ignored_ignored_nick_idx', 'btree');

-- Test flipped.
SELECT has_view('flipped');

SELECT has_column(        'flipped', 'id' );
SELECT col_type_is(       'flipped', 'id', 'text' );

SELECT has_column(  'flipped', 'nickname' );
SELECT col_type_is( 'flipped', 'nickname', 'text' );

SELECT has_column(  'flipped', 'body' );
SELECT col_type_is( 'flipped', 'body', 'body' );

SELECT has_column(  'flipped', 'timestamp' );
SELECT col_type_is( 'flipped', 'timestamp', 'timestamp with time zone' );

SELECT has_column(  'flipped', 'tsv' );
SELECT col_type_is( 'flipped', 'tsv', 'tsvector' );

SELECT finish();
ROLLBACK;
