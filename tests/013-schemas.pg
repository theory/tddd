SET search_path = public,tap,contrib,pg_catalog;

BEGIN;
--SELECT plan( 9 );
SELECT * FROM no_plan();

SELECT tables_are(
    'public',
    ARRAY[ 'servers', 'channels', 'nicks', 'messages' ]
);

/****************************************************************************/
-- Validate the servers table.
SELECT has_table(         'servers' );
SELECT has_pk(            'servers' );
SELECT has_column(        'servers', 'name' );
SELECT col_type_is(       'servers', 'name', 'citext' );
SELECT col_not_null(      'servers', 'name' );
SELECT col_hasnt_default( 'servers', 'name' );
SELECT col_is_pk(         'servers', 'name' );

/****************************************************************************/
-- Validate the channels table.
SELECT has_table( 'channels' );
SELECT has_pk(    'channels' );

SELECT has_column(        'channels', 'name' );
SELECT col_type_is(       'channels', 'name', 'citext' );
SELECT col_not_null(      'channels', 'name' );
SELECT col_hasnt_default( 'channels', 'name' );

SELECT has_column(        'channels', 'server' );
SELECT col_type_is(       'channels', 'server', 'citext' );
SELECT col_not_null(      'channels', 'server' );
SELECT col_hasnt_default( 'channels', 'server' );
SELECT col_is_fk(         'channels', 'server' );

SELECT fk_ok(
    'channels', 'server',
    'servers',  'name'
);

SELECT col_is_pk( 'channels', ARRAY['name', 'server'] );

/****************************************************************************/
-- Validate the nicks table.
SELECT has_table( 'nicks' );
SELECT has_pk(    'nicks' );

SELECT has_column(        'nicks', 'name' );
SELECT col_type_is(       'nicks', 'name', 'citext' );
SELECT col_not_null(      'nicks', 'name' );
SELECT col_hasnt_default( 'nicks', 'name' );
SELECT col_is_pk(         'nicks', ARRAY['name', 'server'] );

SELECT has_column(        'nicks', 'server' );
SELECT col_type_is(       'nicks', 'server', 'citext' );
SELECT col_not_null(      'nicks', 'server' );
SELECT col_hasnt_default( 'nicks', 'server' );
SELECT col_is_fk(         'nicks', 'server' );

SELECT fk_ok(
    'nicks',   'server',
    'servers', 'name'
);

/****************************************************************************/
-- Validate the messages table.
SELECT has_table( 'messages' );
SELECT has_pk( 'messages' );

SELECT has_column(      'messages', 'id' );
SELECT col_type_is(     'messages', 'id', 'bigint' );
SELECT col_not_null(    'messages', 'id' );
SELECT col_has_default( 'messages', 'id' );
SELECT col_default_is(  'messages', 'id', $$nextval('messages_id_seq'::regclass)$$ );
SELECT col_is_pk(       'messages', 'id' );

SELECT has_column(        'messages', 'server' );
SELECT col_type_is(       'messages', 'server', 'citext' );
SELECT col_not_null(      'messages', 'server' );
SELECT col_hasnt_default( 'messages', 'server' );
SELECT col_isnt_fk(       'messages', 'server' );

SELECT has_column(        'messages', 'channel' );
SELECT col_type_is(       'messages', 'channel', 'citext' );
SELECT col_not_null(      'messages', 'channel' );
SELECT col_hasnt_default( 'messages', 'channel' );

SELECT col_is_fk(         'messages', ARRAY['channel', 'server'] );
SELECT fk_ok(
    'messages', ARRAY[ 'channel', 'server' ],
    'channels', ARRAY[ 'name',    'server' ]
);

SELECT has_column(        'messages', 'nick' );
SELECT col_type_is(       'messages', 'nick', 'citext' );
SELECT col_not_null(      'messages', 'nick' );
SELECT col_hasnt_default( 'messages', 'nick' );
SELECT col_is_fk(         'messages', ARRAY['nick', 'server'] );
SELECT fk_ok(
    'messages', ARRAY[ 'nick', 'server' ],
    'nicks',    ARRAY[ 'name', 'server' ]
);


SELECT has_column( 'messages', 'command' );
SELECT col_type_is( 'messages', 'command', 'citext' );
SELECT col_not_null( 'messages', 'command' );
SELECT col_has_default( 'messages', 'command' );
SELECT col_default_is( 'messages', 'command', 'say' );

SELECT has_column( 'messages', 'body' );
SELECT col_type_is( 'messages', 'body', 'text' );
SELECT col_not_null( 'messages', 'body' );
SELECT col_has_default( 'messages', 'body' );
SELECT col_default_is( 'messages', 'body', '' );

SELECT has_column( 'messages', 'seen_at' );
SELECT col_type_is( 'messages', 'seen_at', 'timestamp with time zone' );
SELECT col_not_null( 'messages', 'seen_at' );
SELECT col_has_default( 'messages', 'seen_at' );
SELECT col_default_is( 'messages', 'seen_at', 'clock_timestamp()' );

SELECT has_column( 'messages', 'is_spam' );
SELECT col_type_is( 'messages', 'is_spam', 'boolean' );
SELECT col_not_null( 'messages', 'is_spam' );
SELECT col_has_default( 'messages', 'is_spam' );
SELECT col_default_is( 'messages', 'is_spam', 'false' );

SELECT has_index( 'messages', 'message_seen_at_idx', 'seen_at'::name );
SELECT index_is_type( 'messages', 'message_seen_at_idx', 'btree' );

SELECT has_index( 'messages', 'message_nick_fdx', ARRAY['server', 'nick'] );
SELECT index_is_type( 'messages', 'message_nick_fdx', 'btree' );

SELECT has_index( 'messages', 'message_channel_fdx', ARRAY['server', 'channel'] );
SELECT index_is_type( 'messages', 'message_channel_fdx', 'btree' );

SELECT finish();
ROLLBACK;
